{{! Use the main layout }}
{{!< main }}
<link rel="stylesheet" href="css/home.css">

{{! New Post Submission Form }}
<section class="content-container">
    {{#if loggedIn}}
        <!-- show the create post form when logged in -->
        <section class="post-form">
            <!-- make a header here -->
            <h1>Create a New Post</h1>
            <form action="/posts" method="POST">
                <!-- title input field name = "title" -->
                <input class="textbox" type="text" name="title" placeholder="Title" required>
                <!-- text area input field name = "content" -->
                <textarea name="content" placeholder="What's on your mind {{user.username}}?" required></textarea>

                <div class="form-actions">
                    <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
                    <button type="submit" class="post-button">Post</button>
                </div>
            </form>

            <div id="emoji-container" class="emoji-panel" style="display: none;">
                <!-- input field for the emoji search, use oninput="searchEmojis() -->
                <input class="textbox" type="text" id="emoji-search" placeholder="Search emojis..." oninput="searchEmojis()">
                <!-- a div, id = "emoji-grid" -->
                <div id="emoji-grid"></div>
            </div>
        </section>
    {{/if}}

    <section class="posts-list">
        <h1>Posts</h1>
        <div class="sort-selection">
            <form action = "/" method = "GET">
            <label>Sort By:</label>
            <input type="radio" name="sort" id="recent" value="recent" onclick="handleRadioClick()"> Newest
            <input type="radio" name="sort" id="old" value="old" onclick="handleRadioClick()"> Oldest
            <input type="radio" name="sort" id="likes" value="likes" onclick="handleRadioClick()"> Most Likes
            <input type="radio" name="sort" id="leastLikes" value="leastLikes" onclick="handleRadioClick()"> Least Likes
            <button type="submit" class="apply-btn" onclick="getRadioValue()">Apply</button>
            </form>
        </div>
        {{#if posts.length}}
        <ul>
            {{#each posts}}
                {{> post this user=../user}}            
            {{/each}}
        </ul>
        {{else}}
            <p class="no-posts">No posts available. Be the first to post something!</p>
        {{/if}}
    </section>
</section>

{{! JavaScript for Emoji Integration }}
<script>
let allEmojis = [];  // Global list to hold all emojis

function toggleEmojiPanel() {
    const container = document.getElementById('emoji-container');
    container.style.display = container.style.display === 'none' ? 'block' : 'none';

    if (container.style.display === 'block' && allEmojis.length == 0) {
        fetchEmojis();
    }
}

async function fetchEmojis() {
    try {
        const response = await fetch(`https://emoji-api.com/emojis?access_key={{accessToken}}`);
        const emojis = await response.json();
        allEmojis = emojis.map(e => ({ character: e.character, slug: e.slug }));
        displayEmojis(allEmojis);
    } catch (error) {
        console.error('Error fetching emojis:', error);
    }
}

function displayEmojis(emojis,limit=200) {
    const container = document.getElementById('emoji-grid');
    container.innerHTML = '';  // Clear previous results
    if (Array.isArray(emojis) && emojis.length > 0) {
        emojis.slice(0, limit).forEach(emoji => {
            const emojiElement = document.createElement('span');
            emojiElement.textContent = emoji.character;
            emojiElement.title = emoji.slug;  // Showing the emoji name on hover
            emojiElement.style.cursor = 'pointer';
            emojiElement.onclick = () => insertEmoji(emoji.character);
            container.appendChild(emojiElement);
        });
    } else {
        container.textContent = 'No emojis found. Try a different search!';
    }
}

function searchEmojis() {
    const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
    const filteredEmojis = allEmojis.filter(emoji => emoji.slug.toLowerCase().includes(searchTerm));
    displayEmojis(filteredEmojis);
}

function insertEmoji(emoji) {
    const textarea = document.querySelector('textarea[name="content"]');
    const start = textarea.selectionStart;
    const end = textarea.selectionEnd;
    const text = textarea.value;
    textarea.value = text.substring(0, start) + emoji + text.substring(end);
    textarea.focus();  // Keep focus on the textarea
    textarea.selectionStart = textarea.selectionEnd = start + emoji.length;
}

function getRadioValue() {
    let radios = document.getElementsByName('sort');
    for (let i = 0; i < radios.length; i++) {
        if (radios[i].checked) {
            return radios[i].value;
        }
    }
}

</script>
